#!/opt/perl5/perls/perl-5.16.3/bin/perl
use strict;
use warnings;
# VERSION
# PODNAME: csp
# ABSTRACT: init script for WWW::CSP::Monitor

use Daemon::Control;
use Path::Tiny;

=head1 SYNOPSIS

    pastebin [start|stop|restart|status]

=for test_synopsis
1;
__END__

=cut

my $user = my $group = 'www-data';

my $run_dir = path(qw( / var run www-data-daemons ));
unless ( -d $run_dir ) {
    mkdir $run_dir;
    chown scalar getpwnam($user), scalar getgrnam($group), $run_dir;
}

Daemon::Control->new({
    name        => 'csp',
    program     => path(qw( / opt perl5 perls perl-5.16.3 bin starman )),
    program_args=> [
        '-s' => 'Starman',
        '-E' => 'production',
        '-S' => path( $run_dir, 'csp.sock' ),
        '-I' => path(qw( / var www csp.hashbang.ca WWW-CSP-Monitor lib )),
        '-a' => path(qw( / var www csp.hashbang.ca WWW-CSP-Monitor bin app.pl )),
        map { ('-M' => $_) } qw/ DBIx::Class JSON /,
    ],
    fork        => 2,
    user        => $user,
    group       => $group,
    pid_file    => path( $run_dir, 'csp.pid' ),
    stdout_file => path( $run_dir, 'csp.log' ),
    stderr_file => path( $run_dir, 'csp.log' ),

    lsb_start   => '$nginx',
    lsb_stop    => '$nginx',
    lsb_sdesc   => 'Starts WWW::CSP::Monitor under plackup+Starman',
    lsb_desc    => 'Starts WWW::CSP::Monitor under plackup+Starman',
})->run;
